

	Mapper 작성하기
	-	Mapper는 Query문을 작성하는 파일
	
		<mapper namespace="test_db">
			<insert id="insert_data" parameterType="kr.co.tjoeun.beans.TestBean">
				<![CDATA[
					insert into springTest values (#{data1}, #{data2}, #{data3})
				]]
			</insert>
		</mapper>
	
	
	Servlet-context.xml 에서 Mybatis 관련 설정하기
	1)	db.properties 파일에 작성한 Database 정보를 XML 파일에서 사용할 수 있도록 Bean을 정의함
		
		org.springframework.beans.factory.config.ProgertyPlaceholderConfigurer.class
		
		<beans:bean class="org.springframework.beans.factory.config.ProgertyPlaceholderConfigurer" >
			<beans:property name="location">
				<beans:value>/WEB-INF/properties/data.properties</beans:value>
			</beans:property>
		</beans:bean>


	2)	데이터베이스 접속 정보를 관리하는 객체인 BasicDataSource 클래스를 Bean으로 정의함
		
		org.apache.commons.dbcp2.BasicDataSource.class
		
		<beans:bean id='basic_data_source' class='org.apache.commons.dbcp2.BasicDataSource' >
			<beans:property name='driverClassName' value='oracle.jdbc.OracleDriver' />
			<beans:property name='url' value='jdbc:oracle:thin:@localhost:1521:xe' />
			<beans:property name='username' value='system' />
			<beans:property name='password' value='1234' />
		</beans:bean>


	3)	SqlSessionFactoryBean 클래스를 bean으로 정의
		-	데이터베이스 접속 정보와 mapper 파일을 관리하는 bean
		
		org.mybatis.spring.SqlSessionFactoryBean.class
		
		<beans:bean id='sqlSession' class='org.mybatis.spring.SqlSessionFactoryBean'>
			<beans:property name='dataSource' ref='basic_data_source' />
			<beans:property name='mapperLocations' value='/WEB-INF/mapper/*.xml' />
		</beans:bean>
	
	
	4)	SqlSessionTemplate 클래스를 Bean으로 정의(등록)하기
		-	Query 문을 전달하는 Bean 이며, 이 bean을 주입 받아 필요한 Query를 실행
	
		org.mybatis.spring.SqlSessionTemplate.class
		
		<beans:bean id='sqlSessionTemplate' class='org.mybatis.spring.SqlSessionTemplate'>
			<beans:constructor-arg index='0' ref='sqlSession' />
		</beans:bean>
	
	
	
	
		
	
	
	
	
	
	