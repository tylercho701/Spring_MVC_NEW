<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:beans="http://www.springframework.org/schema/beans"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/mvc
	   					   http://www.springframework.org/schema/mvc/spring-mvc.xsd
	   					   http://www.springframework.org/schema/beans
	   					   http://www.springframework.org/schema/beans/spring-beans.xsd
	   					   http://www.springframework.org/schema/context
	   					   http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- scan한 package 내부의 class 중
		 Controller 라는 annotation이 지정된 class 들을
		 controller로 loading함 -->
	<annotation-driven />
		
	<!-- scan할 bean들이 모여 있는 package 지정 -->
	<context:component-scan base-package="kr.co.tjoeun.controller" />
	<context:component-scan base-package="kr.co.tjoeun.service" />
	<context:component-scan base-package="kr.co.tjoeun.dao" />
	
	<!-- Controller 의 method에서 반환하는 문자열의 prefix와 suffix 경로 설정 -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- 정적 파일 경로 지정 -->
	<resources mapping="/**" location="/resources/" />
	
	<!-- properties 파일을 bean으로 설정 -->
	<beans:bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<beans:property name="locations">
			<beans:list>
				<beans:value>/WEB-INF/properties/db.properties</beans:value>
				<beans:value>/WEB-INF/properties/option.properties</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- BasicDataSource : 데이터 베이스 접속 정보를 관리하는 Bean -->
	<beans:bean class="org.apache.commons.dbcp2.BasicDataSource" id="basic_data_source">
		<beans:property name="driverClassName" value="${db.classname}" />
		<beans:property name="url" value="${db.url}" />
		<beans:property name="username" value="${db.username}" />
		<beans:property name="password" value="${db.password}" />
	</beans:bean>
	
	<!-- Query문과 DB 접속 정보를 관리하는 Bean -->
	<beans:bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSession">
		<beans:property name="dataSource" ref="basic_data_source" />
		<beans:property name="mapperLocations" value="/WEB-INF/mapper/*.xml" />
	</beans:bean>
	
	<!-- Query문 실행을 위한 Bean(Mapper 관리) -->
	<beans:bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSession" />
	</beans:bean>
	
	<!-- interceptor 등록하기 -->
	<interceptors>
		<interceptor>
			<mapping path="/**" />
			<beans:bean class="kr.co.tjoeun.interceptor.TopMenuInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/user/modify" />
			<mapping path="/user/logout" />
			<mapping path="/board/*" />
			<exclude-mapping path="/board/main"/>
			<beans:bean class="kr.co.tjoeun.interceptor.CheckLoginInterceptor" />
		</interceptor>
		<interceptor>
			<mapping path="/board/modify" />
			<mapping path="/board/delete" />
			<beans:bean class="kr.co.tjoeun.interceptor.CheckWriterInterceptor" />
		</interceptor>
	</interceptors>	

	<!-- error message properties 등록 -->
	<beans:bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource" id="messageSource">
		<beans:property name="basenames">
			<beans:list>
				<beans:value>/WEB-INF/properties/error</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>
	
	<!-- message 에 접근하는 접근자 등록 -->
	<beans:bean class="org.springframework.context.support.MessageSourceAccessor">
		<beans:constructor-arg ref="messageSource" />
	</beans:bean>
	
	<!-- file 업로드를 위한 multipartResolver 등록 -->
	<beans:bean class="org.springframework.web.multipart.support.StandardServletMultipartResolver" id="multipartResolver" />
	
	
</beans:beans>