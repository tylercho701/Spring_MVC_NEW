

	Interceptor
	-	AOP:	Aspect Oriented Programming
				(관점 지향 프로그래밍)
		ㄴ	Interceptor는 요청 주소(request: URL / URI)에 대해
			관심을 갖고 요청이 발생하게 되면 요청 주소를
			확인해서 controller의 메소드를 호출하기 전이나 후에
			다른 메소드를 호출할 수 있도록 가로채가는 것
			
		ㄴ	요청 발생 시 호출되는 메소드의 중복되는 부분이 있는 경우,
			interceptor를 사용해서 처리함
			
		ㄴ	로그인 여부 확인, 회원 등급 별 사용 권한 확인 등의
			작업을 처리할 때 주로 사용함
			
			
	-	Interceptor 구현하기
		ㄴ	Interceptor는 HandlerInterceptor 인터페이스를 구현하거나
			HandlerInterceptorAdapter 클래스를 상속받은 클래스를 작성한 후
			상속받은 메소드를 overriding해서 작성함
			
		ㄴ	preHandle() 메소드
			-	Controller의 메소드가 호출되기 전에 자동으로 호출되는 메소드
				이 메소드가 false 를 반환하면 code의 흐름이 중단됨
				
		ㄴ	postHandle() 메소드
			-	Controller의 메소드 수행이 완료되고 View 처리(return)를 
				수행하기 전에 자동으로 호출되는 메소드
				
		ㄴ	afterCompletion() 메소드
			-	View 처리까지 완료되고 응답 결과(response)가 
				client의 browser로 전달되기 전에 자동으로 호출되는 메소드
				
	-	Interceptor 등록하기
		ㄴ	ServletAppContext 클래스에 addInterceptor 메소드로 등록함
		
	-	Interceptor 동작
		ㄴ	preHandle은 등록한 순서대로 동작
		ㄴ	postHandle과 afterCompeltion은 등록 순서 역순으로 동작
		
	Pattern
	-	*:	이름 하나를 의미함. 글자수, 글자 등에 제한이 없음
		?:	글자 하나만
		**:	하위 이름까지 포함하고 글자수, 글자 등에 제한이 없음
		
	-	Pattern 등록
		ㄴ	addPathPatterns, <mapping>:	interceptor가 가로채는 url 주소를 등록함
		
		ㄴ	excludePathPatterns, <exclude-mapping>:	interceptor가 가로채지 않을 url 주소를 등록함
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		
		